import { useRouter } from "next/router"
import Head from 'next/head'
import Link from "next/link"
import dynamic from "next/dynamic"
import { useEffect } from "react"
import { NextPageWithoutLayout } from '../_app'
import pageAuth from '@/utilities/pageAuth'
import styles from '@/styles/patientprofile.module.scss'
import { useAppDispatch, useAppSelector } from "@/states/hooks"
import { authSelector, patientSelector } from "@/states/selectors"
import { getPatients } from "@/states/patient"
import { PatientInterface } from "@/interfaces/PatientInterface"
import moment from "moment"
import PrivateLayout from "@/components/layout/private"
const Breadcrumb = dynamic(() => import('antd/lib/breadcrumb'))
const BreadcrumbItem = dynamic(() => import('antd/lib/breadcrumb/BreadcrumbItem'))
const Descriptions = dynamic(() => import('antd/lib/descriptions'))
const DescriptionItem = dynamic(() => import('antd/lib/descriptions/Item'))

const PatientProfile : NextPageWithoutLayout = () =>
{
  const dispatch = useAppDispatch()
  const router = useRouter()

  const { loggedData } = useAppSelector(authSelector)

  const clinic_id = loggedData?.user?.clinic_id

  const { data } = useAppSelector(patientSelector)

  useEffect(() => {dispatch(getPatients(clinic_id))}, [dispatch, clinic_id])

  const patient = data?.find((row : PatientInterface) => row.id === Number(router.query.id))

  return (
    <>
        <Head>
      <title>Patient / {`${patient?.first_name} ${patient?.last_name}`} - App</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/logo.png" />
      </Head>
      <main className={styles._}>
  
          <Breadcrumb>
              <BreadcrumbItem>
              <Link href='/patients'>Patient</Link>
              </BreadcrumbItem>
              <BreadcrumbItem>{`${patient?.first_name} ${patient?.last_name}`}</BreadcrumbItem>
          </Breadcrumb>

          <div className={styles.inner}>
          <Descriptions title="Patient Info" column={2}>
          <DescriptionItem label="First Name">{patient?.first_name}</DescriptionItem>
          <DescriptionItem label="Middle Name">{patient?.middle_name}</DescriptionItem>
          <DescriptionItem label="Last Name">{patient?.last_name}</DescriptionItem>
          <DescriptionItem label="Email">{patient?.email}</DescriptionItem>
          <DescriptionItem label="Clinic">{patient?.clinic_name}</DescriptionItem>
          <DescriptionItem label="Subscription">{patient?.subscription}</DescriptionItem>
          <DescriptionItem label="Date Joined">{patient?.date_joined && moment(patient?.date_joined).format('LLL')}</DescriptionItem>
          </Descriptions>
          </div>

      </main>
    </>
  )
  
}

export default PatientProfile

function assignSSRCallback(ctx: any) : {props: object}
{

  // other logic with ctx can do here

return {
  props: {}
}

}

PatientProfile.getLayout = function PageLayout(page: JSX.Element)  {
  return <PrivateLayout>{page}</PrivateLayout>
}

export const getServerSideProps = pageAuth(true, assignSSRCallback)